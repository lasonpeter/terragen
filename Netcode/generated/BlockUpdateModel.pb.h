// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BlockUpdateModel.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_BlockUpdateModel_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_BlockUpdateModel_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_BlockUpdateModel_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_BlockUpdateModel_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_BlockUpdateModel_2eproto;
namespace terragen {
class BlockUpdateModel;
struct BlockUpdateModelDefaultTypeInternal;
extern BlockUpdateModelDefaultTypeInternal _BlockUpdateModel_default_instance_;
}  // namespace terragen
PROTOBUF_NAMESPACE_OPEN
template<> ::terragen::BlockUpdateModel* Arena::CreateMaybeMessage<::terragen::BlockUpdateModel>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace terragen {

// ===================================================================

class BlockUpdateModel final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:terragen.BlockUpdateModel) */ {
 public:
  inline BlockUpdateModel() : BlockUpdateModel(nullptr) {}
  ~BlockUpdateModel() override;
  explicit PROTOBUF_CONSTEXPR BlockUpdateModel(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BlockUpdateModel(const BlockUpdateModel& from);
  BlockUpdateModel(BlockUpdateModel&& from) noexcept
    : BlockUpdateModel() {
    *this = ::std::move(from);
  }

  inline BlockUpdateModel& operator=(const BlockUpdateModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockUpdateModel& operator=(BlockUpdateModel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockUpdateModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlockUpdateModel* internal_default_instance() {
    return reinterpret_cast<const BlockUpdateModel*>(
               &_BlockUpdateModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BlockUpdateModel& a, BlockUpdateModel& b) {
    a.Swap(&b);
  }
  inline void Swap(BlockUpdateModel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockUpdateModel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockUpdateModel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BlockUpdateModel>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BlockUpdateModel& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const BlockUpdateModel& from) {
    BlockUpdateModel::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BlockUpdateModel* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "terragen.BlockUpdateModel";
  }
  protected:
  explicit BlockUpdateModel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChunkXFieldNumber = 1,
    kChunkZFieldNumber = 2,
    kBlockXFieldNumber = 3,
    kBlockYFieldNumber = 4,
    kBlockZFieldNumber = 5,
    kBlockIdFieldNumber = 6,
  };
  // int32 chunkX = 1;
  void clear_chunkx();
  int32_t chunkx() const;
  void set_chunkx(int32_t value);
  private:
  int32_t _internal_chunkx() const;
  void _internal_set_chunkx(int32_t value);
  public:

  // int32 chunkZ = 2;
  void clear_chunkz();
  int32_t chunkz() const;
  void set_chunkz(int32_t value);
  private:
  int32_t _internal_chunkz() const;
  void _internal_set_chunkz(int32_t value);
  public:

  // int32 blockX = 3;
  void clear_blockx();
  int32_t blockx() const;
  void set_blockx(int32_t value);
  private:
  int32_t _internal_blockx() const;
  void _internal_set_blockx(int32_t value);
  public:

  // int32 blockY = 4;
  void clear_blocky();
  int32_t blocky() const;
  void set_blocky(int32_t value);
  private:
  int32_t _internal_blocky() const;
  void _internal_set_blocky(int32_t value);
  public:

  // int32 blockZ = 5;
  void clear_blockz();
  int32_t blockz() const;
  void set_blockz(int32_t value);
  private:
  int32_t _internal_blockz() const;
  void _internal_set_blockz(int32_t value);
  public:

  // uint32 blockId = 6;
  void clear_blockid();
  uint32_t blockid() const;
  void set_blockid(uint32_t value);
  private:
  uint32_t _internal_blockid() const;
  void _internal_set_blockid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:terragen.BlockUpdateModel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t chunkx_;
    int32_t chunkz_;
    int32_t blockx_;
    int32_t blocky_;
    int32_t blockz_;
    uint32_t blockid_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_BlockUpdateModel_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BlockUpdateModel

// int32 chunkX = 1;
inline void BlockUpdateModel::clear_chunkx() {
  _impl_.chunkx_ = 0;
}
inline int32_t BlockUpdateModel::_internal_chunkx() const {
  return _impl_.chunkx_;
}
inline int32_t BlockUpdateModel::chunkx() const {
  // @@protoc_insertion_point(field_get:terragen.BlockUpdateModel.chunkX)
  return _internal_chunkx();
}
inline void BlockUpdateModel::_internal_set_chunkx(int32_t value) {
  
  _impl_.chunkx_ = value;
}
inline void BlockUpdateModel::set_chunkx(int32_t value) {
  _internal_set_chunkx(value);
  // @@protoc_insertion_point(field_set:terragen.BlockUpdateModel.chunkX)
}

// int32 chunkZ = 2;
inline void BlockUpdateModel::clear_chunkz() {
  _impl_.chunkz_ = 0;
}
inline int32_t BlockUpdateModel::_internal_chunkz() const {
  return _impl_.chunkz_;
}
inline int32_t BlockUpdateModel::chunkz() const {
  // @@protoc_insertion_point(field_get:terragen.BlockUpdateModel.chunkZ)
  return _internal_chunkz();
}
inline void BlockUpdateModel::_internal_set_chunkz(int32_t value) {
  
  _impl_.chunkz_ = value;
}
inline void BlockUpdateModel::set_chunkz(int32_t value) {
  _internal_set_chunkz(value);
  // @@protoc_insertion_point(field_set:terragen.BlockUpdateModel.chunkZ)
}

// int32 blockX = 3;
inline void BlockUpdateModel::clear_blockx() {
  _impl_.blockx_ = 0;
}
inline int32_t BlockUpdateModel::_internal_blockx() const {
  return _impl_.blockx_;
}
inline int32_t BlockUpdateModel::blockx() const {
  // @@protoc_insertion_point(field_get:terragen.BlockUpdateModel.blockX)
  return _internal_blockx();
}
inline void BlockUpdateModel::_internal_set_blockx(int32_t value) {
  
  _impl_.blockx_ = value;
}
inline void BlockUpdateModel::set_blockx(int32_t value) {
  _internal_set_blockx(value);
  // @@protoc_insertion_point(field_set:terragen.BlockUpdateModel.blockX)
}

// int32 blockY = 4;
inline void BlockUpdateModel::clear_blocky() {
  _impl_.blocky_ = 0;
}
inline int32_t BlockUpdateModel::_internal_blocky() const {
  return _impl_.blocky_;
}
inline int32_t BlockUpdateModel::blocky() const {
  // @@protoc_insertion_point(field_get:terragen.BlockUpdateModel.blockY)
  return _internal_blocky();
}
inline void BlockUpdateModel::_internal_set_blocky(int32_t value) {
  
  _impl_.blocky_ = value;
}
inline void BlockUpdateModel::set_blocky(int32_t value) {
  _internal_set_blocky(value);
  // @@protoc_insertion_point(field_set:terragen.BlockUpdateModel.blockY)
}

// int32 blockZ = 5;
inline void BlockUpdateModel::clear_blockz() {
  _impl_.blockz_ = 0;
}
inline int32_t BlockUpdateModel::_internal_blockz() const {
  return _impl_.blockz_;
}
inline int32_t BlockUpdateModel::blockz() const {
  // @@protoc_insertion_point(field_get:terragen.BlockUpdateModel.blockZ)
  return _internal_blockz();
}
inline void BlockUpdateModel::_internal_set_blockz(int32_t value) {
  
  _impl_.blockz_ = value;
}
inline void BlockUpdateModel::set_blockz(int32_t value) {
  _internal_set_blockz(value);
  // @@protoc_insertion_point(field_set:terragen.BlockUpdateModel.blockZ)
}

// uint32 blockId = 6;
inline void BlockUpdateModel::clear_blockid() {
  _impl_.blockid_ = 0u;
}
inline uint32_t BlockUpdateModel::_internal_blockid() const {
  return _impl_.blockid_;
}
inline uint32_t BlockUpdateModel::blockid() const {
  // @@protoc_insertion_point(field_get:terragen.BlockUpdateModel.blockId)
  return _internal_blockid();
}
inline void BlockUpdateModel::_internal_set_blockid(uint32_t value) {
  
  _impl_.blockid_ = value;
}
inline void BlockUpdateModel::set_blockid(uint32_t value) {
  _internal_set_blockid(value);
  // @@protoc_insertion_point(field_set:terragen.BlockUpdateModel.blockId)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace terragen

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_BlockUpdateModel_2eproto
